@model ITInventory.Models.Product

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.ProductName, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductName)
                @Html.ValidationMessageFor(model => model.ProductName)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SKU, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SKU)
                @Html.ValidationMessageFor(model => model.SKU)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SellPrice, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SellPrice)
                @Html.ValidationMessageFor(model => model.SellPrice)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight)
                @Html.ValidationMessageFor(model => model.Weight)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WeightUnit, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WeightUnit)
                @Html.ValidationMessageFor(model => model.WeightUnit)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PackageWeight, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PackageWeight)
                @Html.ValidationMessageFor(model => model.PackageWeight)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PackageHeight, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PackageHeight)
                @Html.ValidationMessageFor(model => model.PackageHeight)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PackageLength, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PackageLength)
                @Html.ValidationMessageFor(model => model.PackageLength)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PackageUnits, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PackageUnits)
                @Html.ValidationMessageFor(model => model.PackageUnits)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.QtyPerPackage, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QtyPerPackage)
                @Html.ValidationMessageFor(model => model.QtyPerPackage)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DefaultOrderSize, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DefaultOrderSize)
                @Html.ValidationMessageFor(model => model.DefaultOrderSize)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManufacturerId, "ManufacturerId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ManufacturerId", String.Empty)
                @Html.ValidationMessageFor(model => model.ManufacturerId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VendorId, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VendorId)
                @Html.ValidationMessageFor(model => model.VendorId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImagePath, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImagePath)
                @Html.ValidationMessageFor(model => model.ImagePath)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OnOrder, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OnOrder)
                @Html.ValidationMessageFor(model => model.OnOrder)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Catalog, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Catalog)
                @Html.ValidationMessageFor(model => model.Catalog)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StockLevel, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StockLevel)
                @Html.ValidationMessageFor(model => model.StockLevel)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReorderThreshold, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReorderThreshold)
                @Html.ValidationMessageFor(model => model.ReorderThreshold)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.KitId, "KitId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("KitId", String.Empty)
                @Html.ValidationMessageFor(model => model.KitId)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Active, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Active) 
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastOrderedDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastOrderedDate)
                @Html.ValidationMessageFor(model => model.LastOrderedDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastEditDateTime, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastEditDateTime)
                @Html.ValidationMessageFor(model => model.LastEditDateTime)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastEditUser, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastEditUser)
                @Html.ValidationMessageFor(model => model.LastEditUser)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div> 
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

