@model List<ITInventory.Models.Product>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>

@(Html.Kendo().Grid(Model)
.Name("grid")
.Columns(column =>
    {
        column.Bound(c => c.Id).Width(150);
        column.Bound(c => c.ProductName).Width(150);
        column.Bound(c => c.SKU).Width(150);
        column.Bound(c => c.Weight).Width(150);
        column.Bound(c => c.SellPrice).Width(150);
        column.Bound(c => c.WeightUnit).Width(150);
        column.Bound(c => c.PackageHeight).Width(150);
        column.Bound(c => c.PackageWeight).Width(150);
        column.Bound(c => c.PackageLength).Width(150);
        column.Bound(c => c.PackageUnits).Width(150);
        column.Bound(c => c.QtyPerPackage).Width(150);
        column.Bound(c => c.VendorId).Width(150);
        column.Bound(c => c.ImagePath).Width(150);
        column.Bound(c => c.OnOrder).Width(150);
        column.Bound(c => c.StockLevel).Width(150);
        column.Bound(c => c.Catalog).Width(150);
        column.Bound(c => c.IsKit).Width(150);
        column.Bound(c => c.Active).Width(150);
        column.Bound(c => c.LastOrderedDate).Width(150);
        column.Bound(c => c.LastEditDateTime).Width(150);
        column.Bound(c => c.LastEditUser).Width(150);
        column.Template(@<text>@Html.ActionLink("Edit", "Edit", new { id = item.Id }) | @Html.ActionLink("Details", "Details", new { id = item.Id }) | @Html.ActionLink("Delete", "Delete", new { id = item.Id })</text>).Width(150);
        
    })
    .HtmlAttributes(new { style = "height: 550px;" })
    .Scrollable()
    .Filterable()
    .Groupable()
    .Sortable()
    .Pageable(pageable => pageable
    .Refresh(true)
    .PageSizes(true)
    .ButtonCount(5))

)

@*<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ProductName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SKU)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.SellPrice)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Weight)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.WeightUnit)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PackageWeight)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PackageHeight)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PackageLength)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.PackageUnits)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.QtyPerPackage)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.DefaultOrderSize)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.VendorId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ImagePath)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OnOrder)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Catalog)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.StockLevel)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ReorderThreshold)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Active)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastOrderedDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastEditDateTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.LastEditUser)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Kit.KitName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Vendor.LastEditUser)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Vendor1.LastEditUser)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.ProductName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SKU)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.SellPrice)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Weight)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.WeightUnit)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PackageWeight)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PackageHeight)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PackageLength)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.PackageUnits)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.QtyPerPackage)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.DefaultOrderSize)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.VendorId)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ImagePath)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.OnOrder)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Catalog)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.StockLevel)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ReorderThreshold)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Active)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastOrderedDate)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastEditDateTime)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastEditUser)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Kit.KitName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Vendor.LastEditUser)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Vendor1.LastEditUser)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>*@
