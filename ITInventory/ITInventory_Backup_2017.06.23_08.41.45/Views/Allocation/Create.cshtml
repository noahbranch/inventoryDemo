@model ITInventory.Models.Allocation

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Allocation</h4>
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.Label("Is this a split order?", new { @class = "control-label col-md-2" })
            @Html.CheckBoxFor(model => model.IsSplit)
            @Html.ValidationMessageFor(model => model.IsSplit)
        </div>

        <div class="form-group">
            @Html.Label("Office Names", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RSCDB, ViewBag.OfficeName as SelectList, htmlAttributes: new { style = "width: 300px;", placeholder = "Start typing office name", multiple="multiple" })
                @Html.ValidationMessageFor(model => model.RSCDB)
            </div>
        </div>

        <div>
            @(Html.Kendo().Grid<ITInventory.Models.ProductViewModel>()
.Name("grid")
.Columns(column =>
    {
        column.Template(@<text></text>).ClientTemplate("<input type=\"checkbox\" id=\"#= Id #\" class=\"orderCheckbox\"/>").Width(40);
        column.Template(@<text></text>).Title("Allocate Qty").ClientTemplate("<input type=\"number\" class=\"orderVal\", id=\"#=ProductName #\" style=\"width: 50px;\", value = #= DefaultOrderSize # />");
        column.Bound(c => c.ProductName).HtmlAttributes(new { @class = "productName"}).Title("Product");
        column.Bound(c => c.SellPrice).Title("Cost").Format("{0:c}");
        column.Bound(c => c.StockLevel).Title("Stock");
        column.Bound(c => c.ReorderThreshold).Title("Auto Reorder");
    })
        .HtmlAttributes(new { style = "height: 550px;" })
        .Scrollable()
        .Filterable()
        .Groupable()
        .Sortable()
        .DataSource(dataSource => dataSource
        .Ajax()
        .ServerOperation(false)
        .Model(model => model.Id(p => p.Id))
        .Read(read => read.Action("Read_Create", "Allocation").Type(HttpVerbs.Get))
        .PageSize(20))
        .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .PageSizes(new int[] { 10, 20, 100, 200 })
            .ButtonCount(5))
            )
        </div>

        

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Create" class="btn btn-default" id="confirm" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    $("#RSCDB").kendoMultiSelect();

    var productNames = [];
    var productQty = [];
    $(document).on('change', '.orderCheckbox', function () {

        if (this.checked) {
            productNames.push(this.id);
            productQty.push(this.parentNode.nextSibling.childNodes[0].value);
        }
        else {
            productNames.splice(productNames.indexOf(this.id), 1);
            productQty.splice(productQty.indexOf(this.parentNode.nextSibling.childNodes[0].value), 1);
        }

        $("#selected").text(productNames);
    });

    $("#confirm").click(function () {

        var office = $("#RSCDB").kendoMultiSelect().data("kendoMultiSelect")._old;
        var split = "false";

        if ($("#IsSplit").prop('checked')) {
            var split = "true";
        }

        alert(office);

        if (productQty.indexOf(0) >= 0) {
            alert("Cannot allocate 0 of an item");
        }
        else {
            $.ajax({
                url: "@Url.Action("AllocateProducts", "Allocation")",
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify({
                    RSCDB: office,
                    IsSplit: split,
                    ProductId: productNames,
                    ProductCount: productQty
                })
            })
        }
    });

</script>