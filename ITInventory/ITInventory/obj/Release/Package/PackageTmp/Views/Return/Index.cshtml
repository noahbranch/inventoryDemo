@model IEnumerable<ITInventory.Models.Return>
@{
    ViewBag.Title = "Returns";
    
}

<h2>Returns</h2>

@(Html.Kendo().Grid(Model)
    .Name("grid")
        .Columns(column =>
        {
            column.Bound(model => model.AllocationLot.Lot.Product.ProductName);
            column.Bound(model => model.Quantity);
            column.Bound(model => model.AllocationLotId).Title("Order ID");
            column.Bound(model => model.AllocationLot.Lot.Price).Format("{0:c}").Title("Price Per Unit");
            column.Template(@<text>@{string text = "";
                                     if(item.IsPartial == false)
                                     {
                                         text = "Full Order Returned";
                                     }
                                     else if(item.IsPartial == true){
                                         text = "Partial Order Returned";
                                     }
                                     else
                                     {
                                         text = "";
                                     }
                                         }
                                            <p>@text</p></text>);
            column.Bound(r => r.LastEditDateTime).Format("{0:MMM dd, yyyy}").Title("Return Date");
            column.Template(@<text>
                                @{
                                    string hideButton = "none";
                                    string hideText = "none";
                                    if (item.InInventory == false)
                                    {
                                        hideButton = "block";
                                        hideText = "none";
                                    }
                                    else if (item.InInventory == true)
                                    {
                                        hideButton = "none";
                                        hideText = "block";
                                    }
                                 }
                                        <input id="@item.Quantity" name="@item.AllocationLot.LotId"  type="button" style="display: @hideButton" value="Check-In" class="returnOrder" />
                                        <p style="display: @hideText">Checked-In</p>

                            </text>);
            column.Bound(model => model.Id).Hidden();
        })
            .Scrollable()
            .Filterable()
            .Sortable()
            .HtmlAttributes(new { style = "height: 550px;" })
            .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(true)
                .PageSizes(new int[] { 10, 20, 100 })
                .ButtonCount(5))
)

<script>

    $(document).on('click', '.returnOrder', function () {
        var checkIn = true;
        var checkQty = this.id;
        var LotId = this.name;
        var checkId = this.parentNode.nextSibling.innerText;

        $(this).fadeOut(300);
        $(this.nextElementSibling).delay(300).fadeIn();

        $.ajax({
            url: "@Url.Action("CheckIn_Return", "Return")",
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify({
                QtyConfirmed: checkQty,
                CheckedIn: checkIn,
                LotId: LotId,
                CheckId: checkId
            })
    })
    });
</script>